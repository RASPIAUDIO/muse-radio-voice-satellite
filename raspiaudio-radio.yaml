substitutions:
  name: raspiaudio-radio
  friendly_name: Raspiaudio Radio

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  min_version: 2024.9.3
  platformio_options:
    board_build.flash_mode: dio
    board_build.arduino.memory_type: qio_opi
  on_boot:
    priority: -100.0
    then:
      - output.turn_off: dac_mute

external_components:
  # - source:
  #     type: git
  #     url: https://github.com/gnumpi/esphome_audio
  #     ref: main
  #   components: [ adf_pipeline, i2s_audio ]
  # - source:
  #     type: local
  #     path: /external_components/esphome_audio/esphome/components
  #   components: [ adf_pipeline, i2s_audio ]
  - source: github://pr#6956
    components: [es8388]
    refresh: 0s

esp32:
  board: esp32-s3-devkitc-1
  variant: esp32s3
  flash_size: 4MB
  framework:
    type: arduino
    # version: recommended
    # sdkconfig_options:
    #   # need to set a s3 compatible board for the adf-sdk to compile
    #   # board specific code is not used though
    #   CONFIG_ESP32_S3_BOX_BOARD: "y"

logger:

api:
  encryption:
    key: "MMMPI+wN5Dmy4WFNr/2KH8wnnHtEtQTRw58aLo7ngRA="
  services:
    - service: start_va
      then:
        - voice_assistant.start
    - service: stop_va
      then:
        - voice_assistant.stop

ota:
  platform: esphome
  password: "ab866230ad40dcfcc8d39d9405b6ba54"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Raspiaudio-Radio"
    password: "HdLkEn6lGWKn"

captive_portal:

##########
# Hardware

es8388:
  preset: raspiaudio_radio

psram:
  mode: octal
  speed: 80MHz

#######
# Buses

i2c:
  sda: GPIO18
  scl: GPIO11
  id: i2c_bus

spi:
  - id: spi_bus0
    clk_pin: GPIO12
    mosi_pin: GPIO8
    # miso_pin: GPIOXX
    interface: hardware

i2s_audio:
  - id: i2s_shared
    i2s_lrclk_pin: GPIO16
    i2s_bclk_pin: GPIO5
    i2s_mclk_pin: GPIO0

#####################
# Internal components

output:
  - platform: gpio
    id: dac_mute
    pin:
      number: GPIO46
      inverted: true
      mode:
        output: true
      allow_other_uses: true

  - platform: ledc
    pin:
      number: GPIO41
      mode:
        output: true
    id: screen_backlight_pin

light:
  - platform: monochromatic
    output: screen_backlight_pin
    id: screen_backlight
    name: Screen backlight

microphone:
  - platform: i2s_audio
    id: raspiaudio_microphone
    i2s_din_pin: GPIO4
    adc_type: external
    pdm: false

###############
# HA Components

binary_sensor:
  # - platform: gpio
  #   pin:
  #     number: GPIO35
  #     mode:
  #       input: true
  #       pullup: true
  #   id: function_button
  #   name: Function button
  #   disabled_by_default: true

  - platform: gpio
    pin:
      number: GPIO48
      inverted: true
      mode:
        input: true
        pullup: true
    id: volume_button
    name: Volume button
    disabled_by_default: true
    on_click:
      then: voice_assistant.start

  - platform: gpio
    pin:
      number: GPIO10
      inverted: true
      mode:
        input: true
        pullup: true
    id: jack_plugged
    name: Jack plugged in
    disabled_by_default: true
    filters:
      - delayed_on_off: 0.3s
    on_state:
      then:
        - script.execute: update_dac_mute

  - platform: gpio
    pin:
      number: GPIO21
      mode:
        input: true
        pullup: true
    id: usb_plugged
    name: USB plugged in
    disabled_by_default: true

  - platform: template
    id: button_check
    internal: true
    # name: Check button
    # disabled_by_default: true
    # icon: mdi:check
    lambda: !lambda "return (abs(id(fp_buttons_adc).state-0.81) < 0.15);"

  - platform: template
    id: button_share
    internal: true
    # name: Share button
    # disabled_by_default: true
    # icon: mdi:hand-heart
    lambda: !lambda "return (abs(id(fp_buttons_adc).state-1.57) < 0.15);"

  - platform: template
    id: button_love
    internal: true
    # name: Love button
    # disabled_by_default: true
    # icon: mdi:heart
    lambda: !lambda "return (abs(id(fp_buttons_adc).state-1.98) < 0.15);"

  - platform: template
    id: button_like
    internal: true
    # name: Like button
    # disabled_by_default: true
    # icon: mdi:thumb-up
    lambda: !lambda "return (abs(id(fp_buttons_adc).state-0.43) < 0.15);"

sensor:
  - platform: rotary_encoder
    name: "Volume"
    id: volume_encoder
    pin_a:
      number: GPIO42
      mode:
        input: true
        pullup: true
    pin_b:
      number: GPIO3
      mode:
        input: true
        pullup: true
    on_anticlockwise:
      then:
        - media_player.volume_down: raspiaudio_speaker
    on_clockwise:
      then:
        - media_player.volume_up: raspiaudio_speaker

  - platform: rotary_encoder
    name: "Function"
    id: function_encoder
    pin_a:
      number: GPIO7
      mode:
        input: true
        pullup: true
    pin_b:
      number: GPIO6
      mode:
        input: true
        pullup: true

  - platform: adc
    pin: GPIO1
    id: fp_buttons_adc
    internal: true
    disabled_by_default: true
    attenuation: auto
    update_interval: 100ms
    filters:
      - delta: 0.3

media_player:
  - platform: i2s_audio
    id: raspiaudio_speaker
    name: None
    dac_type: external
    i2s_dout_pin: GPIO17
    i2s_audio_id: i2s_shared
    mode: mono
    mute_pin:
      number: GPIO46
      inverted: true
      mode:
        output: true
      allow_other_uses: true
voice_assistant:
  id: va
  microphone: raspiaudio_microphone
  media_player: raspiaudio_speaker
  on_tts_end:
    - media_player.play_media: !lambda return x;
  on_end:
    - delay: 100ms
    - wait_until:
        condition:
          not: media_player.is_playing
    - voice_assistant.stop:

#########
# Scripts

script:
  - id: update_dac_mute
    then:
      - if:
          condition:
            and:
              - media_player.is_playing
              - binary_sensor.is_off: jack_plugged
          then:
            - logger.log: "Turn off DAC mute"
            - output.turn_off: dac_mute
          else:
            - logger.log: "Turn on DAC mute"
            - output.turn_on: dac_mute
